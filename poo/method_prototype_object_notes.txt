METHOD, PROTOTYPE E OBJECT

- Propriedades que servem como funções. São as ações dos objetos ("Sujeito e verbo de uma frase").

- UM MÉTODO É INVOCADO DA MESMA MANEIRA QUE FUNÇÕES

PROTOTYPES

- TODO OBJETO TEM UM "PAI" (POO - HERANÇA). ESSE PAI NO JS É CHAMADO DE PROTOTYPE. ELE TAMBÉM É UM OBJETO. TECNICAMENTE FALANDO, ELE É UM OBJETO DE OUTRO OBJETO.

- MESMO QUANDO UM OBJETO NÃO TEM PROPRIEDADES, TECNICAMENTE ELE TEM, JUSTAMENTE POR TER UM PROTOTYPE. DIGAMOS QUE O PROTOTYPE É UM OBJETO 'FALLBACK' DE OUTRO OBJETO.

- FALLBACK: É UMA OPÇÃO DE CONTINGÊNCIA, OU SEJA, ALGO É USADO QUANDO SUA OPÇÃO ORIGINAL NÃO ESTÁ DISPONÍVEL POR ALGUMA RAZÃO.

- A INSTÂNCIA MÁXIMA DE UM OBJETO É O 'Object'. TUDO QUE É MÉTODO QUE NÃO CRIAMOS, PORÉM SAI DE UM OBJETO, ESTARÁ DENTRO DO 'Object' (O PAI DE TODOS OS OBJETOS)

- É IMPORTANTE ENTENDER QUE HÁ UMA DISTINÇÃO ENTRE O PROTÓTIPO DE UM OBJETO (QUE ESTÁ DISPONÍVEL POR MEIO DE OBJECT.GETPROTOTYPEOF(OBJ), OU POR MEIO DA PROPRIEDADE __PROTO__ ) E A PROPRIEDADE PROTOTYPE EM FUNÇÕES CONSTRUTORAS. O PRIMEIRO É A PROPRIEDADE EM CADA INSTÂNCIA E O ÚLTIMO É A PROPRIEDADE NO CONSTRUTOR. OU SEJA, OBJECT.GETPROTOTYPEOF(NEW FOOBAR()) REFERE-SE AO MESMO OBJETO QUE FOOBAR.PROTOTYPE.





