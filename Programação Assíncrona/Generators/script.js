/* 
    EM JAVASCRIPT, UM GENERATOR É UMA FUNÇÃO ESPECIAL QUE PODE PAUSAR E RETOMAR SUA EXECUÇÃO. ELE PERMITE QUE VOCÊ PRODUZA UMA SEQUÊNCIA DE VALORES DE FORMA PREGUIÇOSA, OU SEJA, VOCÊ PODE GERAR VALORES SOB DEMANDA, UM DE CADA VEZ, SEM TER QUE CALCULAR TODOS DE UMA VEZ. 

    OS GERADORES SÃO DEFINIDOS USANDO A SINTAXE DE FUNCTION* E CONTÊM INSTRUÇÕES ESPECIAIS CHAMADAS DE "YIELD", QUE PAUSAM A EXECUÇÃO DO GERADOR E RETORNAM UM VALOR PARA O CÓDIGO QUE O INVOCOU. QUANDO O GERADOR É CHAMADO NOVAMENTE, ELE RETOMA A PARTIR DO PONTO EM QUE FOI PAUSADO ANTERIORMENTE. 
*/

function* contador() {
    let i = 0
    while (true) {
        yield i++
    }
}

const gen = contador()

console.log(gen.next().value) // 0
console.log(gen.next().value) // 1
console.log(gen.next().value) // 2
console.log(gen.next().done) // False | PQ AINDA NÃO TERMINOU

/*
    NESTE EXEMPLO, A FUNÇÃO CONTADOR() É UM GERADOR QUE PRODUZ UMA SEQUÊNCIA INFINITA DE NÚMEROS INTEIROS COMEÇANDO DE 0. CADA VEZ QUE CHAMAMOS GEN.NEXT(), OBTEMOS O PRÓXIMO VALOR DA SEQUÊNCIA. O YIELD É USADO PARA PAUSAR A EXECUÇÃO DO GERADOR E RETORNAR O VALOR ATUAL DA VARIÁVEL I. 
*/